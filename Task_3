package com.example.apextask_3application

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import com.example.apextask_3application.ui.theme.ApexTask3ApplicationTheme

// ------------------------------------------------------------
// Task 3 : Backend Integration Demo
// ------------------------------------------------------------
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            ApexTask3ApplicationTheme {
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    TaskScreen01()
                }
            }
        }
    }
}

// ------------------------------------------------------------
// Composable Screen
// ------------------------------------------------------------
@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun TaskScreen01() {
    val controller = remember { TaskController() }
    val status by remember { derivedStateOf { controller.status } }

    Scaffold(
        topBar = {
            CenterAlignedTopAppBar(
                title = { Text(text = "Task 3 - Backend Integration Demo") }
            )
        }
    ) { innerPadding ->
        Column(
            modifier = Modifier
                .fillMaxSize()
                .padding(innerPadding)
                .padding(all = 20.dp),
            verticalArrangement = Arrangement.Center,
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Button(onClick = { controller.runIntegration() }) {
                Text(text = "Start Integration")
            }

            Spacer(modifier = Modifier.height(24.dp))

            Text(
                text = status,
                style = MaterialTheme.typography.bodyLarge
            )
        }
    }
}

// ------------------------------------------------------------
// Controller Class (handles logic)
// ------------------------------------------------------------
class TaskController {

    var status by mutableStateOf("Waiting for integration...")

    fun runIntegration() {
        status = "Integrating with backend..."
        simulateBackendCall()
    }

    private fun simulateBackendCall() {
        status = "Backend integration successful!"
    }
}
